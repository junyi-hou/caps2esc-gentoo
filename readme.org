* caps2esc -- map caplock to escape (press alone) and ctrl (combo) in tty, X and wayland

** Introduction

this repo contains config files for [[https://gitlab.com/interception/linux/plugins/caps2esc][caps2esc]] in [[https://www.gentoo.org][gentoo]].

** Dependency:

[[https://github.com/openrc/openrc/][OpenRC]]

[[https://gitlab.com/interception/linux/plugins/caps2esc][caps2esc]]

systemd users can refer the caps2esc project repo for systemd-related settings

** Installation

*** manual installation

clone this repo, then
#+begin_src bash
sudo mv /path/to/repo/bin/caps2escd /usr/sbin/
sudo mv /path/to/repo/config/caps2esc /etc/init.d/
sudo mv /path/to/repo/config/caps2esc.yaml /etc/default/
#+end_src

*** use emerge

the ebuild file of this program can be found at overlay [TBD]. Add the overlay using your favorite method, e.g., use ~layman~:
#+begin_src bash
sudo layman -a [TBD]
#+end_src
then emerge this package using
#+begin_src bash
sudo emerge --ask app-misc/caps2esc
#+end_src

** Usage

Set up the service using
#+begin_src bash
sudo rc-update add caps2esc default
#+end_src

** To-do

- identified the internal keyboard and intercept that input stream only
  - people (like me) may have custom built keyboard with QMK firmware that does the mappings, interception on those devices will break the customization.
  - current workaround: run 
#+begin_src bash
cat /proc/bus/input/devices
#+end_src
to identify which devices need to be intercepted, and change ~${DEVNODE}~ in ~/etc/default/caps2esc.yaml~ to the specific device. In my case, I have a Thinkpad T480, and the internal keyboard registers as ~/dev/input/event3~

** License

MIT
